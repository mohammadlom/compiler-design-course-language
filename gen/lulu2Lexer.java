// Generated from C:/Users/Mohammad/IdeaProjects/compiler-design-course-language/src\lulu2.g4 by ANTLR 4.7
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class lulu2Lexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		Single_line_c=25, Multi_line_c=26, OCONTROLLS=27, OBLOCK=28, INT=29, BOOL=30, 
		FLOAT=31, LONG=32, DOUBLE=33, STRING=34, CHAR=35, ALLOCATE=36, DEFAULT=37, 
		THIS=38, DESTRUCT=39, IF=40, TRUE=41, BREAK=42, READ=43, CASE=44, ELSE=45, 
		RETURN=46, WHILE=47, FALSE=48, NEW=49, SIZEOF=50, WRITE=51, CONST=52, 
		FUNCTION=53, FOR=54, SWITCH=55, CONTINUE=56, OF=57, NIL=58, SUPER=59, 
		Int_const=60, ID=61, LETTER=62, OptionalExponent=63, REAL_CONST=64, REAL_FACT=65, 
		CHAR_CONST=66, ASCII=67, Bool_const=68, String_const=69, GOTO=70, ARITHMETIC=71, 
		RELATIONAL=72, WS=73;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "Single_line_c", 
		"Multi_line_c", "OCONTROLLS", "OBLOCK", "INT", "BOOL", "FLOAT", "LONG", 
		"DOUBLE", "STRING", "CHAR", "ALLOCATE", "DEFAULT", "THIS", "DESTRUCT", 
		"IF", "TRUE", "BREAK", "READ", "CASE", "ELSE", "RETURN", "WHILE", "FALSE", 
		"NEW", "SIZEOF", "WRITE", "CONST", "FUNCTION", "FOR", "SWITCH", "CONTINUE", 
		"OF", "NIL", "SUPER", "DIGIT", "Int_const", "ID", "LETTER", "OptionalExponent", 
		"REAL_CONST", "REAL_FACT", "CHAR_CONST", "ASCII", "Bool_const", "String_const", 
		"GOTO", "ARITHMETIC", "RELATIONAL", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'declare'", "'{'", "'}'", "'('", "')'", "'='", "';'", "'['", "']'", 
		"','", "':'", "'private'", "'public'", "'protected'", "'.'", "') of'", 
		"'-'", "'!'", "'~'", "'&'", "'|'", "'^'", "'||'", "'&&'", null, null, 
		null, null, "'int'", "'bool'", "'float'", "'long'", "'double'", "'string'", 
		"'char'", "'allocate'", "'default'", "'this'", "'destruct'", "'if'", "'true'", 
		"'break'", "'read'", "'case'", "'else'", "'return'", "'while'", "'false'", 
		"'new'", "'sizeof'", "'write'", "'const'", "'function'", "'for'", "'switch'", 
		"'continue'", "'of'", "'nil'", "'super'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "Single_line_c", "Multi_line_c", "OCONTROLLS", "OBLOCK", "INT", 
		"BOOL", "FLOAT", "LONG", "DOUBLE", "STRING", "CHAR", "ALLOCATE", "DEFAULT", 
		"THIS", "DESTRUCT", "IF", "TRUE", "BREAK", "READ", "CASE", "ELSE", "RETURN", 
		"WHILE", "FALSE", "NEW", "SIZEOF", "WRITE", "CONST", "FUNCTION", "FOR", 
		"SWITCH", "CONTINUE", "OF", "NIL", "SUPER", "Int_const", "ID", "LETTER", 
		"OptionalExponent", "REAL_CONST", "REAL_FACT", "CHAR_CONST", "ASCII", 
		"Bool_const", "String_const", "GOTO", "ARITHMETIC", "RELATIONAL", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public lulu2Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "lulu2.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2K\u0254\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3"+
		"\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3"+
		"\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\21\3"+
		"\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3"+
		"\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\32\7\32\u00ea\n\32\f\32\16\32"+
		"\u00ed\13\32\3\32\3\32\3\33\3\33\3\33\3\33\7\33\u00f5\n\33\f\33\16\33"+
		"\u00f8\13\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3"+
		"\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3\""+
		"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3%"+
		"\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3"+
		"(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3,\3,\3"+
		",\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3"+
		"\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3"+
		"\63\3\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\64\3\65\3"+
		"\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3"+
		"\67\3\67\3\67\3\67\38\38\38\38\38\38\38\39\39\39\39\39\39\39\39\39\3:"+
		"\3:\3:\3;\3;\3;\3;\3<\3<\3<\3<\3<\3<\3=\3=\3>\6>\u01bd\n>\r>\16>\u01be"+
		"\3>\3>\3>\6>\u01c4\n>\r>\16>\u01c5\5>\u01c8\n>\3?\3?\5?\u01cc\n?\3?\3"+
		"?\7?\u01d0\n?\f?\16?\u01d3\13?\3@\3@\3A\3A\5A\u01d9\nA\3A\6A\u01dc\nA"+
		"\rA\16A\u01dd\3B\3B\3B\6B\u01e3\nB\rB\16B\u01e4\3B\3B\6B\u01e9\nB\rB\16"+
		"B\u01ea\5B\u01ed\nB\3B\5B\u01f0\nB\3C\6C\u01f3\nC\rC\16C\u01f4\3C\3C\3"+
		"D\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\3D\5D\u0209\nD\3D\3D\3E\3"+
		"E\3E\6E\u0210\nE\rE\16E\u0211\3E\6E\u0215\nE\rE\16E\u0216\6E\u0219\nE"+
		"\rE\16E\u021a\3E\6E\u021e\nE\rE\16E\u021f\3E\6E\u0223\nE\rE\16E\u0224"+
		"\6E\u0227\nE\rE\16E\u0228\5E\u022b\nE\3F\3F\5F\u022f\nF\3G\3G\7G\u0233"+
		"\nG\fG\16G\u0236\13G\3G\3G\3H\3H\3H\3H\3H\3H\3H\3I\3I\3J\3J\3J\3J\3J\3"+
		"J\3J\3J\3J\5J\u024c\nJ\3K\6K\u024f\nK\rK\16K\u0250\3K\3K\3\u00f6\2L\3"+
		"\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37"+
		"\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37="+
		" ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9"+
		"q:s;u<w=y\2{>}?\177@\u0081A\u0083B\u0085C\u0087D\u0089E\u008bF\u008dG"+
		"\u008fH\u0091I\u0093J\u0095K\3\2\22\4\2\f\f\17\17\5\2..\60\60<=\7\2*+"+
		"]]__}}\177\177\3\2\62;\4\2ZZzz\5\2\62;CHch\4\2\62;aa\4\2C\\c|\4\2GGgg"+
		"\4\2--//\3\2ch\3\2CH\7\2\f\f\17\17$$))^^\6\2\'\',-//\61\61\4\2>>@@\5\2"+
		"\13\f\17\17\"\"\2\u027c\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2"+
		"\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"+
		"\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"+
		"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"+
		"\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3"+
		"\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2"+
		"\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2"+
		"Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3"+
		"\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2"+
		"\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2"+
		"w\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083"+
		"\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2"+
		"\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095"+
		"\3\2\2\2\3\u0097\3\2\2\2\5\u009f\3\2\2\2\7\u00a1\3\2\2\2\t\u00a3\3\2\2"+
		"\2\13\u00a5\3\2\2\2\r\u00a7\3\2\2\2\17\u00a9\3\2\2\2\21\u00ab\3\2\2\2"+
		"\23\u00ad\3\2\2\2\25\u00af\3\2\2\2\27\u00b1\3\2\2\2\31\u00b3\3\2\2\2\33"+
		"\u00bb\3\2\2\2\35\u00c2\3\2\2\2\37\u00cc\3\2\2\2!\u00ce\3\2\2\2#\u00d3"+
		"\3\2\2\2%\u00d5\3\2\2\2\'\u00d7\3\2\2\2)\u00d9\3\2\2\2+\u00db\3\2\2\2"+
		"-\u00dd\3\2\2\2/\u00df\3\2\2\2\61\u00e2\3\2\2\2\63\u00e5\3\2\2\2\65\u00f0"+
		"\3\2\2\2\67\u00fe\3\2\2\29\u0100\3\2\2\2;\u0102\3\2\2\2=\u0106\3\2\2\2"+
		"?\u010b\3\2\2\2A\u0111\3\2\2\2C\u0116\3\2\2\2E\u011d\3\2\2\2G\u0124\3"+
		"\2\2\2I\u0129\3\2\2\2K\u0132\3\2\2\2M\u013a\3\2\2\2O\u013f\3\2\2\2Q\u0148"+
		"\3\2\2\2S\u014b\3\2\2\2U\u0150\3\2\2\2W\u0156\3\2\2\2Y\u015b\3\2\2\2["+
		"\u0160\3\2\2\2]\u0165\3\2\2\2_\u016c\3\2\2\2a\u0172\3\2\2\2c\u0178\3\2"+
		"\2\2e\u017c\3\2\2\2g\u0183\3\2\2\2i\u0189\3\2\2\2k\u018f\3\2\2\2m\u0198"+
		"\3\2\2\2o\u019c\3\2\2\2q\u01a3\3\2\2\2s\u01ac\3\2\2\2u\u01af\3\2\2\2w"+
		"\u01b3\3\2\2\2y\u01b9\3\2\2\2{\u01c7\3\2\2\2}\u01cb\3\2\2\2\177\u01d4"+
		"\3\2\2\2\u0081\u01d6\3\2\2\2\u0083\u01ec\3\2\2\2\u0085\u01f2\3\2\2\2\u0087"+
		"\u01f8\3\2\2\2\u0089\u020c\3\2\2\2\u008b\u022e\3\2\2\2\u008d\u0230\3\2"+
		"\2\2\u008f\u0239\3\2\2\2\u0091\u0240\3\2\2\2\u0093\u024b\3\2\2\2\u0095"+
		"\u024e\3\2\2\2\u0097\u0098\7f\2\2\u0098\u0099\7g\2\2\u0099\u009a\7e\2"+
		"\2\u009a\u009b\7n\2\2\u009b\u009c\7c\2\2\u009c\u009d\7t\2\2\u009d\u009e"+
		"\7g\2\2\u009e\4\3\2\2\2\u009f\u00a0\7}\2\2\u00a0\6\3\2\2\2\u00a1\u00a2"+
		"\7\177\2\2\u00a2\b\3\2\2\2\u00a3\u00a4\7*\2\2\u00a4\n\3\2\2\2\u00a5\u00a6"+
		"\7+\2\2\u00a6\f\3\2\2\2\u00a7\u00a8\7?\2\2\u00a8\16\3\2\2\2\u00a9\u00aa"+
		"\7=\2\2\u00aa\20\3\2\2\2\u00ab\u00ac\7]\2\2\u00ac\22\3\2\2\2\u00ad\u00ae"+
		"\7_\2\2\u00ae\24\3\2\2\2\u00af\u00b0\7.\2\2\u00b0\26\3\2\2\2\u00b1\u00b2"+
		"\7<\2\2\u00b2\30\3\2\2\2\u00b3\u00b4\7r\2\2\u00b4\u00b5\7t\2\2\u00b5\u00b6"+
		"\7k\2\2\u00b6\u00b7\7x\2\2\u00b7\u00b8\7c\2\2\u00b8\u00b9\7v\2\2\u00b9"+
		"\u00ba\7g\2\2\u00ba\32\3\2\2\2\u00bb\u00bc\7r\2\2\u00bc\u00bd\7w\2\2\u00bd"+
		"\u00be\7d\2\2\u00be\u00bf\7n\2\2\u00bf\u00c0\7k\2\2\u00c0\u00c1\7e\2\2"+
		"\u00c1\34\3\2\2\2\u00c2\u00c3\7r\2\2\u00c3\u00c4\7t\2\2\u00c4\u00c5\7"+
		"q\2\2\u00c5\u00c6\7v\2\2\u00c6\u00c7\7g\2\2\u00c7\u00c8\7e\2\2\u00c8\u00c9"+
		"\7v\2\2\u00c9\u00ca\7g\2\2\u00ca\u00cb\7f\2\2\u00cb\36\3\2\2\2\u00cc\u00cd"+
		"\7\60\2\2\u00cd \3\2\2\2\u00ce\u00cf\7+\2\2\u00cf\u00d0\7\"\2\2\u00d0"+
		"\u00d1\7q\2\2\u00d1\u00d2\7h\2\2\u00d2\"\3\2\2\2\u00d3\u00d4\7/\2\2\u00d4"+
		"$\3\2\2\2\u00d5\u00d6\7#\2\2\u00d6&\3\2\2\2\u00d7\u00d8\7\u0080\2\2\u00d8"+
		"(\3\2\2\2\u00d9\u00da\7(\2\2\u00da*\3\2\2\2\u00db\u00dc\7~\2\2\u00dc,"+
		"\3\2\2\2\u00dd\u00de\7`\2\2\u00de.\3\2\2\2\u00df\u00e0\7~\2\2\u00e0\u00e1"+
		"\7~\2\2\u00e1\60\3\2\2\2\u00e2\u00e3\7(\2\2\u00e3\u00e4\7(\2\2\u00e4\62"+
		"\3\2\2\2\u00e5\u00e6\7\'\2\2\u00e6\u00e7\7\'\2\2\u00e7\u00eb\3\2\2\2\u00e8"+
		"\u00ea\n\2\2\2\u00e9\u00e8\3\2\2\2\u00ea\u00ed\3\2\2\2\u00eb\u00e9\3\2"+
		"\2\2\u00eb\u00ec\3\2\2\2\u00ec\u00ee\3\2\2\2\u00ed\u00eb\3\2\2\2\u00ee"+
		"\u00ef\b\32\2\2\u00ef\64\3\2\2\2\u00f0\u00f1\7\'\2\2\u00f1\u00f2\7B\2"+
		"\2\u00f2\u00f6\3\2\2\2\u00f3\u00f5\13\2\2\2\u00f4\u00f3\3\2\2\2\u00f5"+
		"\u00f8\3\2\2\2\u00f6\u00f7\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f7\u00f9\3\2"+
		"\2\2\u00f8\u00f6\3\2\2\2\u00f9\u00fa\7B\2\2\u00fa\u00fb\7\'\2\2\u00fb"+
		"\u00fc\3\2\2\2\u00fc\u00fd\b\33\2\2\u00fd\66\3\2\2\2\u00fe\u00ff\t\3\2"+
		"\2\u00ff8\3\2\2\2\u0100\u0101\t\4\2\2\u0101:\3\2\2\2\u0102\u0103\7k\2"+
		"\2\u0103\u0104\7p\2\2\u0104\u0105\7v\2\2\u0105<\3\2\2\2\u0106\u0107\7"+
		"d\2\2\u0107\u0108\7q\2\2\u0108\u0109\7q\2\2\u0109\u010a\7n\2\2\u010a>"+
		"\3\2\2\2\u010b\u010c\7h\2\2\u010c\u010d\7n\2\2\u010d\u010e\7q\2\2\u010e"+
		"\u010f\7c\2\2\u010f\u0110\7v\2\2\u0110@\3\2\2\2\u0111\u0112\7n\2\2\u0112"+
		"\u0113\7q\2\2\u0113\u0114\7p\2\2\u0114\u0115\7i\2\2\u0115B\3\2\2\2\u0116"+
		"\u0117\7f\2\2\u0117\u0118\7q\2\2\u0118\u0119\7w\2\2\u0119\u011a\7d\2\2"+
		"\u011a\u011b\7n\2\2\u011b\u011c\7g\2\2\u011cD\3\2\2\2\u011d\u011e\7u\2"+
		"\2\u011e\u011f\7v\2\2\u011f\u0120\7t\2\2\u0120\u0121\7k\2\2\u0121\u0122"+
		"\7p\2\2\u0122\u0123\7i\2\2\u0123F\3\2\2\2\u0124\u0125\7e\2\2\u0125\u0126"+
		"\7j\2\2\u0126\u0127\7c\2\2\u0127\u0128\7t\2\2\u0128H\3\2\2\2\u0129\u012a"+
		"\7c\2\2\u012a\u012b\7n\2\2\u012b\u012c\7n\2\2\u012c\u012d\7q\2\2\u012d"+
		"\u012e\7e\2\2\u012e\u012f\7c\2\2\u012f\u0130\7v\2\2\u0130\u0131\7g\2\2"+
		"\u0131J\3\2\2\2\u0132\u0133\7f\2\2\u0133\u0134\7g\2\2\u0134\u0135\7h\2"+
		"\2\u0135\u0136\7c\2\2\u0136\u0137\7w\2\2\u0137\u0138\7n\2\2\u0138\u0139"+
		"\7v\2\2\u0139L\3\2\2\2\u013a\u013b\7v\2\2\u013b\u013c\7j\2\2\u013c\u013d"+
		"\7k\2\2\u013d\u013e\7u\2\2\u013eN\3\2\2\2\u013f\u0140\7f\2\2\u0140\u0141"+
		"\7g\2\2\u0141\u0142\7u\2\2\u0142\u0143\7v\2\2\u0143\u0144\7t\2\2\u0144"+
		"\u0145\7w\2\2\u0145\u0146\7e\2\2\u0146\u0147\7v\2\2\u0147P\3\2\2\2\u0148"+
		"\u0149\7k\2\2\u0149\u014a\7h\2\2\u014aR\3\2\2\2\u014b\u014c\7v\2\2\u014c"+
		"\u014d\7t\2\2\u014d\u014e\7w\2\2\u014e\u014f\7g\2\2\u014fT\3\2\2\2\u0150"+
		"\u0151\7d\2\2\u0151\u0152\7t\2\2\u0152\u0153\7g\2\2\u0153\u0154\7c\2\2"+
		"\u0154\u0155\7m\2\2\u0155V\3\2\2\2\u0156\u0157\7t\2\2\u0157\u0158\7g\2"+
		"\2\u0158\u0159\7c\2\2\u0159\u015a\7f\2\2\u015aX\3\2\2\2\u015b\u015c\7"+
		"e\2\2\u015c\u015d\7c\2\2\u015d\u015e\7u\2\2\u015e\u015f\7g\2\2\u015fZ"+
		"\3\2\2\2\u0160\u0161\7g\2\2\u0161\u0162\7n\2\2\u0162\u0163\7u\2\2\u0163"+
		"\u0164\7g\2\2\u0164\\\3\2\2\2\u0165\u0166\7t\2\2\u0166\u0167\7g\2\2\u0167"+
		"\u0168\7v\2\2\u0168\u0169\7w\2\2\u0169\u016a\7t\2\2\u016a\u016b\7p\2\2"+
		"\u016b^\3\2\2\2\u016c\u016d\7y\2\2\u016d\u016e\7j\2\2\u016e\u016f\7k\2"+
		"\2\u016f\u0170\7n\2\2\u0170\u0171\7g\2\2\u0171`\3\2\2\2\u0172\u0173\7"+
		"h\2\2\u0173\u0174\7c\2\2\u0174\u0175\7n\2\2\u0175\u0176\7u\2\2\u0176\u0177"+
		"\7g\2\2\u0177b\3\2\2\2\u0178\u0179\7p\2\2\u0179\u017a\7g\2\2\u017a\u017b"+
		"\7y\2\2\u017bd\3\2\2\2\u017c\u017d\7u\2\2\u017d\u017e\7k\2\2\u017e\u017f"+
		"\7|\2\2\u017f\u0180\7g\2\2\u0180\u0181\7q\2\2\u0181\u0182\7h\2\2\u0182"+
		"f\3\2\2\2\u0183\u0184\7y\2\2\u0184\u0185\7t\2\2\u0185\u0186\7k\2\2\u0186"+
		"\u0187\7v\2\2\u0187\u0188\7g\2\2\u0188h\3\2\2\2\u0189\u018a\7e\2\2\u018a"+
		"\u018b\7q\2\2\u018b\u018c\7p\2\2\u018c\u018d\7u\2\2\u018d\u018e\7v\2\2"+
		"\u018ej\3\2\2\2\u018f\u0190\7h\2\2\u0190\u0191\7w\2\2\u0191\u0192\7p\2"+
		"\2\u0192\u0193\7e\2\2\u0193\u0194\7v\2\2\u0194\u0195\7k\2\2\u0195\u0196"+
		"\7q\2\2\u0196\u0197\7p\2\2\u0197l\3\2\2\2\u0198\u0199\7h\2\2\u0199\u019a"+
		"\7q\2\2\u019a\u019b\7t\2\2\u019bn\3\2\2\2\u019c\u019d\7u\2\2\u019d\u019e"+
		"\7y\2\2\u019e\u019f\7k\2\2\u019f\u01a0\7v\2\2\u01a0\u01a1\7e\2\2\u01a1"+
		"\u01a2\7j\2\2\u01a2p\3\2\2\2\u01a3\u01a4\7e\2\2\u01a4\u01a5\7q\2\2\u01a5"+
		"\u01a6\7p\2\2\u01a6\u01a7\7v\2\2\u01a7\u01a8\7k\2\2\u01a8\u01a9\7p\2\2"+
		"\u01a9\u01aa\7w\2\2\u01aa\u01ab\7g\2\2\u01abr\3\2\2\2\u01ac\u01ad\7q\2"+
		"\2\u01ad\u01ae\7h\2\2\u01aet\3\2\2\2\u01af\u01b0\7p\2\2\u01b0\u01b1\7"+
		"k\2\2\u01b1\u01b2\7n\2\2\u01b2v\3\2\2\2\u01b3\u01b4\7u\2\2\u01b4\u01b5"+
		"\7w\2\2\u01b5\u01b6\7r\2\2\u01b6\u01b7\7g\2\2\u01b7\u01b8\7t\2\2\u01b8"+
		"x\3\2\2\2\u01b9\u01ba\t\5\2\2\u01baz\3\2\2\2\u01bb\u01bd\5y=\2\u01bc\u01bb"+
		"\3\2\2\2\u01bd\u01be\3\2\2\2\u01be\u01bc\3\2\2\2\u01be\u01bf\3\2\2\2\u01bf"+
		"\u01c8\3\2\2\2\u01c0\u01c1\7\62\2\2\u01c1\u01c3\t\6\2\2\u01c2\u01c4\t"+
		"\7\2\2\u01c3\u01c2\3\2\2\2\u01c4\u01c5\3\2\2\2\u01c5\u01c3\3\2\2\2\u01c5"+
		"\u01c6\3\2\2\2\u01c6\u01c8\3\2\2\2\u01c7\u01bc\3\2\2\2\u01c7\u01c0\3\2"+
		"\2\2\u01c8|\3\2\2\2\u01c9\u01cc\5\177@\2\u01ca\u01cc\7a\2\2\u01cb\u01c9"+
		"\3\2\2\2\u01cb\u01ca\3\2\2\2\u01cc\u01d1\3\2\2\2\u01cd\u01d0\5\177@\2"+
		"\u01ce\u01d0\t\b\2\2\u01cf\u01cd\3\2\2\2\u01cf\u01ce\3\2\2\2\u01d0\u01d3"+
		"\3\2\2\2\u01d1\u01cf\3\2\2\2\u01d1\u01d2\3\2\2\2\u01d2~\3\2\2\2\u01d3"+
		"\u01d1\3\2\2\2\u01d4\u01d5\t\t\2\2\u01d5\u0080\3\2\2\2\u01d6\u01d8\t\n"+
		"\2\2\u01d7\u01d9\t\13\2\2\u01d8\u01d7\3\2\2\2\u01d8\u01d9\3\2\2\2\u01d9"+
		"\u01db\3\2\2\2\u01da\u01dc\t\5\2\2\u01db\u01da\3\2\2\2\u01dc\u01dd\3\2"+
		"\2\2\u01dd\u01db\3\2\2\2\u01dd\u01de\3\2\2\2\u01de\u0082\3\2\2\2\u01df"+
		"\u01ed\5\u0085C\2\u01e0\u01e2\5\u0085C\2\u01e1\u01e3\t\5\2\2\u01e2\u01e1"+
		"\3\2\2\2\u01e3\u01e4\3\2\2\2\u01e4\u01e2\3\2\2\2\u01e4\u01e5\3\2\2\2\u01e5"+
		"\u01ed\3\2\2\2\u01e6\u01e8\7\60\2\2\u01e7\u01e9\t\5\2\2\u01e8\u01e7\3"+
		"\2\2\2\u01e9\u01ea\3\2\2\2\u01ea\u01e8\3\2\2\2\u01ea\u01eb\3\2\2\2\u01eb"+
		"\u01ed\3\2\2\2\u01ec\u01df\3\2\2\2\u01ec\u01e0\3\2\2\2\u01ec\u01e6\3\2"+
		"\2\2\u01ed\u01ef\3\2\2\2\u01ee\u01f0\5\u0081A\2\u01ef\u01ee\3\2\2\2\u01ef"+
		"\u01f0\3\2\2\2\u01f0\u0084\3\2\2\2\u01f1\u01f3\t\5\2\2\u01f2\u01f1\3\2"+
		"\2\2\u01f3\u01f4\3\2\2\2\u01f4\u01f2\3\2\2\2\u01f4\u01f5\3\2\2\2\u01f5"+
		"\u01f6\3\2\2\2\u01f6\u01f7\7\60\2\2\u01f7\u0086\3\2\2\2\u01f8\u0208\7"+
		")\2\2\u01f9\u0209\t\t\2\2\u01fa\u01fb\7^\2\2\u01fb\u0209\7\62\2\2\u01fc"+
		"\u01fd\7^\2\2\u01fd\u0209\7v\2\2\u01fe\u01ff\7^\2\2\u01ff\u0209\7p\2\2"+
		"\u0200\u0201\7^\2\2\u0201\u0209\7t\2\2\u0202\u0209\5\u0089E\2\u0203\u0209"+
		"\t\5\2\2\u0204\u0209\5\u0091I\2\u0205\u0209\5\u0093J\2\u0206\u0209\5\67"+
		"\34\2\u0207\u0209\59\35\2\u0208\u01f9\3\2\2\2\u0208\u01fa\3\2\2\2\u0208"+
		"\u01fc\3\2\2\2\u0208\u01fe\3\2\2\2\u0208\u0200\3\2\2\2\u0208\u0202\3\2"+
		"\2\2\u0208\u0203\3\2\2\2\u0208\u0204\3\2\2\2\u0208\u0205\3\2\2\2\u0208"+
		"\u0206\3\2\2\2\u0208\u0207\3\2\2\2\u0209\u020a\3\2\2\2\u020a\u020b\7)"+
		"\2\2\u020b\u0088\3\2\2\2\u020c\u020d\7^\2\2\u020d\u022a\t\6\2\2\u020e"+
		"\u0210\t\5\2\2\u020f\u020e\3\2\2\2\u0210\u0211\3\2\2\2\u0211\u020f\3\2"+
		"\2\2\u0211\u0212\3\2\2\2\u0212\u0219\3\2\2\2\u0213\u0215\t\f\2\2\u0214"+
		"\u0213\3\2\2\2\u0215\u0216\3\2\2\2\u0216\u0214\3\2\2\2\u0216\u0217\3\2"+
		"\2\2\u0217\u0219\3\2\2\2\u0218\u020f\3\2\2\2\u0218\u0214\3\2\2\2\u0219"+
		"\u021a\3\2\2\2\u021a\u0218\3\2\2\2\u021a\u021b\3\2\2\2\u021b\u022b\3\2"+
		"\2\2\u021c\u021e\t\5\2\2\u021d\u021c\3\2\2\2\u021e\u021f\3\2\2\2\u021f"+
		"\u021d\3\2\2\2\u021f\u0220\3\2\2\2\u0220\u0227\3\2\2\2\u0221\u0223\t\r"+
		"\2\2\u0222\u0221\3\2\2\2\u0223\u0224\3\2\2\2\u0224\u0222\3\2\2\2\u0224"+
		"\u0225\3\2\2\2\u0225\u0227\3\2\2\2\u0226\u021d\3\2\2\2\u0226\u0222\3\2"+
		"\2\2\u0227\u0228\3\2\2\2\u0228\u0226\3\2\2\2\u0228\u0229\3\2\2\2\u0229"+
		"\u022b\3\2\2\2\u022a\u0218\3\2\2\2\u022a\u0226\3\2\2\2\u022b\u008a\3\2"+
		"\2\2\u022c\u022f\5S*\2\u022d\u022f\5a\61\2\u022e\u022c\3\2\2\2\u022e\u022d"+
		"\3\2\2\2\u022f\u008c\3\2\2\2\u0230\u0234\7$\2\2\u0231\u0233\n\16\2\2\u0232"+
		"\u0231\3\2\2\2\u0233\u0236\3\2\2\2\u0234\u0232\3\2\2\2\u0234\u0235\3\2"+
		"\2\2\u0235\u0237\3\2\2\2\u0236\u0234\3\2\2\2\u0237\u0238\7$\2\2\u0238"+
		"\u008e\3\2\2\2\u0239\u023a\7i\2\2\u023a\u023b\7q\2\2\u023b\u023c\7v\2"+
		"\2\u023c\u023d\7q\2\2\u023d\u023e\3\2\2\2\u023e\u023f\5}?\2\u023f\u0090"+
		"\3\2\2\2\u0240\u0241\t\17\2\2\u0241\u0092\3\2\2\2\u0242\u0243\7?\2\2\u0243"+
		"\u024c\7?\2\2\u0244\u0245\7#\2\2\u0245\u024c\7?\2\2\u0246\u0247\7>\2\2"+
		"\u0247\u024c\7?\2\2\u0248\u0249\7?\2\2\u0249\u024c\7@\2\2\u024a\u024c"+
		"\t\20\2\2\u024b\u0242\3\2\2\2\u024b\u0244\3\2\2\2\u024b\u0246\3\2\2\2"+
		"\u024b\u0248\3\2\2\2\u024b\u024a\3\2\2\2\u024c\u0094\3\2\2\2\u024d\u024f"+
		"\t\21\2\2\u024e\u024d\3\2\2\2\u024f\u0250\3\2\2\2\u0250\u024e\3\2\2\2"+
		"\u0250\u0251\3\2\2\2\u0251\u0252\3\2\2\2\u0252\u0253\bK\2\2\u0253\u0096"+
		"\3\2\2\2!\2\u00eb\u00f6\u01be\u01c3\u01c5\u01c7\u01cb\u01cf\u01d1\u01d8"+
		"\u01dd\u01e4\u01ea\u01ec\u01ef\u01f4\u0208\u0211\u0216\u0218\u021a\u021f"+
		"\u0224\u0226\u0228\u022a\u022e\u0234\u024b\u0250\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}